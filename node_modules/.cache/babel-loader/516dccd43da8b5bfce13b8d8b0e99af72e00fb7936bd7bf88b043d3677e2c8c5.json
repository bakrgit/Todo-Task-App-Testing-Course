{"ast":null,"code":"var _jsxFileName = \"/Users/index/Documents/course projects/react-testing/react-test/src/components/ItemForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemForm = _ref => {\n  _s();\n  let {\n    onAddTask\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  //set error\n  const [error, setError] = useState(false);\n  const addTask = e => {\n    e.preventDefault();\n    if (name === \"\") setError(true);else setError(false);\n    onAddTask({\n      name,\n      done: false\n    });\n    setName(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column align-content-center \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      \"data-testid\": \"app-title\",\n      children: \"Todo Tasks App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex my-2 bg-primary w-75  mx-auto justify-content-between rounded-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"task-name\",\n        type: \"text\",\n        className: `form-control  ${error ? \"border-danger border-4\" : \"\"}`,\n        placeholder: \"Add Task\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"task-add-btn\",\n        className: `btn bg-primary text-white fw-bold fs-4`,\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"error-message\",\n      className: \"text-danger mx-auto \",\n      children: \"Please enter a task name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemForm, \"2dEE0ls6XUemsjoKsU/A+gZ/GRw=\");\n_c = ItemForm;\nvar _c;\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"names":["useState","ItemForm","onAddTask","name","setName","error","setError","addTask","e","preventDefault","done","target","value"],"sources":["/Users/index/Documents/course projects/react-testing/react-test/src/components/ItemForm.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport const ItemForm = ({ onAddTask }) => {\n  const [name, setName] = useState(\"\");\n  //set error\n  const [error, setError] = useState(false);\n\n  const addTask = (e) => {\n    e.preventDefault();\n    if (name === \"\") setError(true);\n    else setError(false);\n\n    onAddTask({ name, done: false });\n    setName(\"\");\n  };\n  return (\n    <div className=\"d-flex flex-column align-content-center \">\n      <h1 className=\"text-center\" data-testid=\"app-title\">\n        Todo Tasks App\n      </h1>\n      <form className=\"d-flex my-2 bg-primary w-75  mx-auto justify-content-between rounded-2\">\n        <input\n          data-testid=\"task-name\"\n          type=\"text\"\n          className={`form-control  ${error ? \"border-danger border-4\" : \"\"}`}\n          placeholder=\"Add Task\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <button\n          data-testid=\"task-add-btn\"\n          className={`btn bg-primary text-white fw-bold fs-4`}\n          onClick={addTask}\n        >\n          Add\n        </button>\n      </form>\n      {error && (\n        <div data-testid={\"error-message\"} className=\"text-danger mx-auto \">\n          Please enter a task name\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,OAAO,MAAMC,QAAQ,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMO,OAAO,GAAIC,CAAC,IAAK;IACrBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIN,IAAI,KAAK,EAAE,EAAEG,QAAQ,CAAC,IAAI,CAAC,CAAC,KAC3BA,QAAQ,CAAC,KAAK,CAAC;IAEpBJ,SAAS,CAAC;MAAEC,IAAI;MAAEO,IAAI,EAAE;IAAM,CAAC,CAAC;IAChCN,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,0CAA0C;IAAA,wBACvD;MAAI,SAAS,EAAC,aAAa;MAAC,eAAY,WAAW;MAAA,UAAC;IAEpD;MAAA;MAAA;MAAA;IAAA,QAAK,eACL;MAAM,SAAS,EAAC,wEAAwE;MAAA,wBACtF;QACE,eAAY,WAAW;QACvB,IAAI,EAAC,MAAM;QACX,SAAS,EAAG,iBAAgBC,KAAK,GAAG,wBAAwB,GAAG,EAAG,EAAE;QACpE,WAAW,EAAC,UAAU;QACtB,KAAK,EAAEF,IAAK;QACZ,QAAQ,EAAGK,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACG,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACzC,eACF;QACE,eAAY,cAAc;QAC1B,SAAS,EAAG,wCAAwC;QACpD,OAAO,EAAEL,OAAQ;QAAA,UAClB;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,EACNF,KAAK,iBACJ;MAAK,eAAa,eAAgB;MAAC,SAAS,EAAC,sBAAsB;MAAA,UAAC;IAEpE;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GA1CWJ,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}